{"version":3,"sources":["components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","index.js"],"names":["CardList","robots","Error","SearchBox","searchfield","searchChange","className","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","r","name","toLowerCase","includes","length","React","ReactDOM","render","document","getElementById"],"mappings":"uLAiBeA,EAdE,SAAC,GAAe,EAAbC,OAEZ,MAAM,IAAIC,MAAM,c,oDCUTC,EAbG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAC9B,OACI,qBAAKC,UAAU,MAAf,SACF,uBACEA,UAAU,mCACVC,KAAK,SACLC,YAAY,gBACZC,SAAYJ,OCCLK,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAU,SAAUC,OAAO,kBAAmBC,OAAQ,SAAnE,SACDJ,EAAMK,YCoBEC,E,kDArBX,WAAYN,GAAQ,IAAD,8BACf,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHC,E,qDAOnB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAG9B,WACI,OAAIG,KAAKJ,MAAMC,SACJ,0DAEAG,KAAKX,MAAMK,a,GAjBFQ,aCiDbC,G,wDA1CX,aAAe,IAAD,8BACV,gBAaJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAAEnB,YAAauB,EAAMC,OAAOC,SAb1C,EAAKX,MAAQ,CACTjB,OAAQ,GACRG,YAAa,IAJP,E,qDAQd,WAAqB,IAAD,OAChB0B,MAAM,4CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKX,SAAS,CAAEtB,OAAQiC,S,oBAQ/C,WAAU,IAAD,EAC2BZ,KAAKJ,MAA7BjB,EADH,EACGA,OAAQG,EADX,EACWA,YACV+B,EAAiBlC,EAAOmC,QAAO,SAAAC,GACjC,OAAOA,EAAEC,KAAKC,cAAcC,SAASpC,EAAYmC,kBAErD,OAAiC,IAA7BjB,KAAKJ,MAAMjB,OAAOwC,OACX,yCAGH,sBAAKnC,UAAU,KAAf,UACV,6CACA,cAAC,EAAD,CAAWD,aAAciB,KAAKI,iBAC9B,cAAC,EAAD,UACA,cAAC,EAAD,UACA,cAAC,EAAD,CAAUzB,OAAQkC,e,GAlCNO,IAAMlB,Y,MCCxBmB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.ded653b0.chunk.js","sourcesContent":["import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ robots }) => {\n    if (true) {\n        throw new Error('NOOOOOOOO');\n    }\n    const cardComponent = robots.map(r => {\n        return <Card key={r.id} id={r.id} name={r.name} email={r.email}/>\n\n    })\n    return (\n        <div>\n        {cardComponent}\n        </div>);\n}\n\nexport default CardList;","import React from \"react\";\n\nconst SearchBox = ({ searchfield, searchChange }) => {\n    return (\n        <div className=\"pa2\">\n      <input\n        className=\"pa3 ba b--green bg-lightest-blue\"\n        type=\"search\"\n        placeholder=\"search robots\"\n        onChange = {searchChange}\n      />\n    </div>\n    );\n};\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n    return (\n        <div style={{overflowY:'scroll', border:'5px solid black', height: '500px' }}>\n      {props.children}\n      </div>\n    )\n}\n\nexport default Scroll;","import React, { Component } from 'react';\n\nclass ErrorBoundary extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false\n        }\n    }\n\n    componentDidCatch(error, info) {\n        this.setState({ hasError: true });\n    }\n\n    render() {\n        if (this.state.hasError) {\n            return <h1> Ooops. That is not good</h1>\n        } else {\n            return this.props.children;\n        }\n\n    }\n}\n\nexport default ErrorBoundary;","import React, { Component } from \"react\";\nimport CardList from \"../components/CardList\";\nimport { robots } from \"../robot\";\nimport SearchBox from \"../components/SearchBox\";\nimport Scroll from '../components/Scroll';\nimport ErrorBoundary from '../components/ErrorBoundary'\nimport './App.css'\n\nclass App extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            robots: [],\n            searchfield: ''\n        }\n    }\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.cypress.io/users')\n            .then(response => response.json())\n            .then(users => this.setState({ robots: users }))\n    }\n\n    onSearchChange = (event) => {\n        this.setState({ searchfield: event.target.value });\n\n    }\n\n    render() {\n        const { robots, searchfield } = this.state;\n        const filteredRobots = robots.filter(r => {\n            return r.name.toLowerCase().includes(searchfield.toLowerCase());\n        })\n        if (this.state.robots.length === 0) {\n            return <h1>Loading</h1>\n        } else {\n            return (\n                <div className='tc'>\n      <h1>RoboFriends</h1>\n      <SearchBox searchChange={this.onSearchChange}/>\n      <Scroll>\n      <ErrorBoundary>\n      <CardList robots={filteredRobots} />\n      </ErrorBoundary>\n      </Scroll>\n    </div>\n            );\n        }\n    }\n}\n\nexport default App;","import React from \"react\";\nimport CardList from \"./components/CardList\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./containers/App\";\nimport \"tachyons\";\nimport { robots } from \"./robot\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals"],"sourceRoot":""}